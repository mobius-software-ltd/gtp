package com.mobius.software.telco.protocols.gtp.api.headers;
/*Mobius Software LTD
Copyright 2019, Mobius Software LTD and individual contributors
by the @authors tag.

This program is free software: you can redistribute it and/or modify
under the terms of the GNU Affero General Public License as
published by the Free Software Foundation; either version 3 of
the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>*/
import java.util.HashMap;
import java.util.Map;

public enum MessageType 
{
	ECHO_REQUEST(1),ECHO_RESPONSE(2),VERSION_NOT_SUPPORTED(3),NODE_ALIVE_REQUEST(4),NODE_ALIVE_RESPONSE(5),
	REDIRECTION_REQUEST(6),REDIRECTION_RESPONSE(7),CREATE_PDP_CONTEXT_REQUEST(16),CREATE_PDP_CONTEXT_RESPONSE(17),
	UPDATE_PDP_CONTEXT_REQUEST(18),UPDATE_PDP_CONTEXT_RESPONSE(19),DELETE_PDP_CONTEXT_REQUEST(20),DELETE_PDP_CONTEXT_RESPONSE(21),
	INITIATE_PDP_CONTEXT_ACTIVATION_REQUEST(22),INITIATE_PDP_CONTEXT_ACTIVATION_RESPONSE(23),ERROR_INDICATION(26),
	PDU_NOTIFICATION_REQUEST(27),PDU_NOTIFICATION_RESPONSE(28),PDU_NOTIFICATION_REJECT_REQUEST(29),PDU_NOTIFICATION_REJECT_RESPONSE(30),
	SUPPORTED_EXTENSION_HEADERS_NOTIFICATION(31),SEND_ROUTING_INFORMATION_FOR_GPRS_REQUEST(32),SEND_ROUTING_INFORMATION_FOR_GPRS_RESPONSE(33), 
	FAILURE_REPORT_REQUEST(34),FAILURE_REPORT_RESPONSE(35),NOTE_MS_GPRS_PRESENT_REQUEST(36),NOTE_MS_GPRS_PRESENT_RESPONSE(37),
	IDENTIFICATION_REQUEST(48),IDENTIFICATION_RESPONSE(49),SGSN_CONTEXT_REQUEST(50),SGSN_CONTEXT_RESPONSE(51),SGSN_CONTEXT_ACKNOWLEDGE(52),
	FORWARD_RELOCATION_REQUEST(53),FORWARD_RELOCATION_RESPONSE(54),FORWARD_RELOCATION_COMPLETE(55),RELOCATION_CANCEL_REQUEST(56),RELOCATION_CANCEL_RESPONSE(57),
	FORWARD_SRNS_CONTEXT(58),FORWARD_RELOCATION_COMPLETE_ACKNOWLEDGMENT(59),FORWARD_SRNS_CONTEXT_ACKNOWLEDGMENT(60),RAN_INFORMATION_RELAY(70),
	MBMS_NOTIFICATION_REQUEST(96),MBMS_NOTIFICATION_RESPONSE(97),MBMS_NOTIFICATION_REJECT_REQUEST(98),MBMS_NOTIFICATION_REJECT_RESPONSE(99),
	CREATE_MBMS_CONTEXT_REQUEST(100),CREATE_MBMS_CONTEXT_RESPONSE(101),UPDATE_MBMS_CONTEXT_REQUEST(102),UPDATE_MBMS_CONTEXT_RESPONSE(103),
	DELETE_MBMS_CONTEXT_REQUEST(104),DELETE_MBMS_CONTEXT_RESPONSE(105),MBMS_REGISTRATION_REQUEST(112),MBMS_REGISTRATION_RESPONSE(113),
	MBMS_DEREGISTRATION_REQUEST(114),MBMS_DEREGISTRATION_RESPONSE(115),MBMS_SESSION_START_REQUEST(116),MBMS_SESSION_START_RESPONSE(117),	
	MBMS_SESSION_STOP_REQUEST(118),MBMS_SESSION_STOP_RESPONSE(119),MBMS_SESSION_UPDATE_REQUEST(120),MBMS_SESSION_UPDATE_RESPONSE(121),
	MS_INFO_CHANGE_NOTIFICATION_REQUEST(122),MS_INFO_CHANGE_NOTIFICATION_RESPONSE(123),DATA_RECORD_TRANSFER_REQUEST(240),DATA_RECORD_TRANSFER_RESPONSE(241),
	END_MARKER(254),G_PDU(255),
	UNKNOWN(0);

	private static final Map<Integer, MessageType> intToTypeMap = new HashMap<Integer, MessageType>();
	static
	{
	    for (MessageType type : MessageType.values()) 
	    {
	        intToTypeMap.put(type.value, type);
	    }
	}

	public static MessageType fromInt(int i) 
	{
		MessageType type = intToTypeMap.get(Integer.valueOf(i));
	    if (type == null) 
	        return MessageType.UNKNOWN;
	    
	    return type;
	}
	
	int value;
	
	private MessageType(int value)
	{
		this.value=value;
	}
	
	public int getValue()
	{
		return value;
	}
}
